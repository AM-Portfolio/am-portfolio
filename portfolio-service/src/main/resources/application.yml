spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/portfolio}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:none}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: ${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL:true}
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID:am-portfolio-group}
      auto-offset-reset: ${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      database: 0
      timeout: 60000
      connect-timeout: 60000
      client-type: lettuce
      repositories:
        enabled: false
      cache:
        portfolio:
          ttl: ${SPRING_DATA_REDIS_PORTFOLIO_TTL:1800}  # 30 minutes in seconds
          key-prefix: ${SPRING_DATA_REDIS_PORTFOLIO_KEY_PREFIX:portfolio:analysis:}
        market-index:
          ttl: ${SPRING_DATA_REDIS_MARKET_INDEX_TTL:900}  # 15 minutes in seconds
          key-prefix: ${SPRING_DATA_REDIS_MARKET_INDEX_KEY_PREFIX:market-index:indices:}

app:
  kafka:
    portfolio:
      consumer:
        id: ${APP_KAFKA_PORTFOLIO_CONSUMER_ID:am-portfolio-group}
        enabled: ${APP_KAFKA_PORTFOLIO_CONSUMER_ENABLED:false}
      topic: ${APP_KAFKA_PORTFOLIO_TOPIC:am-portfolio-topic}
    stock:
      consumer:
        id: ${APP_KAFKA_STOCK_CONSUMER_ID:am-stock-group}
        enabled: ${APP_KAFKA_STOCK_CONSUMER_ENABLED:false}
      topic: ${APP_KAFKA_STOCK_TOPIC:am-stock-price-update}
    market-index:
      consumer:
        id: ${APP_KAFKA_MARKET_INDEX_CONSUMER_ID:am-market-index-group}
        enabled: ${APP_KAFKA_MARKET_INDEX_CONSUMER_ENABLED:true}
      topic: ${APP_KAFKA_MARKET_INDEX_TOPIC:nse-indices-update}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH:/}

logging:
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%15.15t] %-40.40logger{39} : %m%n'
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    'com.portfolio': ${LOGGING_LEVEL_COM_PORTFOLIO:INFO}
    'com.portfolio.kafka.consumer': ${LOGGING_LEVEL_COM_PORTFOLIO_KAFKA_CONSUMER:INFO}
    'com.portfolio.rediscache.service': ${LOGGING_LEVEL_COM_PORTFOLIO_REDISCACHE_SERVICE:INFO}
    'org.springframework.data.redis': ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_REDIS:INFO}
    'org.apache.kafka': ${LOGGING_LEVEL_ORG_APACHE_KAFKA:WARN}
